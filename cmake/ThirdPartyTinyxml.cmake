# TinyXML
OPTION(NEKTAR_USE_TINYXML_STL "Use STL with TinyXML library." ON)
MARK_AS_ADVANCED(NEKTAR_USE_TINYXML_STL)

OPTION(THIRDPARTY_BUILD_TINYXML 
    "Build TinyXML library from ThirdParty." ON)

IF (THIRDPARTY_BUILD_TINYXML)
    INCLUDE(ExternalProject)
    EXTERNALPROJECT_ADD(
        tinyxml-2.4.3
        PREFIX ${TPSRC}
        URL ${TPURL}/tinyxml_2_4_3-1.tar.bz2
        URL_MD5 "a00f5e3b547b803977c5744547a688f7"
        STAMP_DIR ${TPSRC}/stamp
        DOWNLOAD_DIR ${TPSRC}
        SOURCE_DIR ${TPSRC}/tinyxml-2.4.3
        BINARY_DIR ${TPBUILD}/tinyxml-2.4.3
        TMP_DIR ${TPBUILD}/tinyxml-2.4.3-tmp
        INSTALL_DIR ${TPDIST}
        CONFIGURE_COMMAND ${CMAKE_COMMAND}
            -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
            -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
            -DCMAKE_INSTALL_PREFIX:PATH=${TPDIST}
            -DCMAKE_CXX_FLAGS:STRING=-DTIXML_USE_STL
            ${TPSRC}/tinyxml-2.4.3
    )
    SET(TINYXML_LIB tinyxml CACHE FILEPATH 
        "Tinyxml library" FORCE)
    MARK_AS_ADVANCED(TINYXML_LIB)
    LINK_DIRECTORIES(${TPDIST}/lib)
    INCLUDE_DIRECTORIES(${TPDIST}/include)
ELSE (THIRDPARTY_BUILD_TINYXML)
    INCLUDE (FindTinyXml)
ENDIF (THIRDPARTY_BUILD_TINYXML)




